# Stage 1: Build the React application
FROM node:20-alpine AS builder

WORKDIR /app

# Copy root package management files
COPY package.json package-lock.json* ./

# Copy workspace package.json files
COPY packages/api/package.json ./packages/api/
COPY packages/web/package.json ./packages/web/
COPY packages/emails/package.json ./packages/emails/

# Install all dependencies
RUN npm install

# Copy the rest of the source code
COPY . .

# Build the web application
RUN npm run build -w packages/web

# Copy the wait script from the scripts directory into the builder stage
COPY scripts/wait-for-api.sh /app/wait-for-api.sh


# Stage 2: Serve the built application from a lightweight server
FROM nginx:stable-alpine

# Copy the built assets from the builder stage
COPY --from=builder /app/packages/web/dist /usr/share/nginx/html

# Copy our custom nginx config to overwrite the default
COPY packages/web/nginx.conf /etc/nginx/conf.d/default.conf

# Add the wait script
COPY scripts/wait-for-api.sh /usr/local/bin/wait-for-api.sh

# Install netcat and set permissions
RUN apk add --no-cache netcat-openbsd && \
    chmod +x /usr/local/bin/wait-for-api.sh

EXPOSE 80
EXPOSE 443

# Use the script to wait for the API then start nginx
CMD ["wait-for-api.sh", "nginx", "-g", "daemon off;"] 